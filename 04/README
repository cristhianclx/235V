# 1st time

python3 -m venv venv # manejar todo los paquetes
source venv/bin/activate # activar entorno (linux)
venv\Scripts\activate.bat # activar entorno (windows)
pip install -r requirements.txt

django-admin startproject src # crea el proyecto en django

python src/manage.py runserver # correr el proyecto
cd src && python manage.py startapp web # poder agregar una carpeta para meter codigo
# despues de agregar una app, ir a settings.py y agregar a installed_apps

# 2nd o +

source venv/bin/activate # activar entorno (linux)
venv\Scripts\activate.bat # activar entorno (windows)
pip install -r requirements.txt

python src/manage.py runserver # correr el proyecto

# utils

python src/manage.py makemigrations # crear la migracion 
python src/manage.py migrate # run migrations
python src/manage.py createsuperuser # crear un usuario tipo superuser

python src/manage.py dumpdata --indent=2 web.person > persons.json
python src/manage.py loaddata persons.json

python src/manage.py inspectdb

cd src && python manage.py makemessages -l en # generate messages for translation
cd src && python manage.py compilemessages -l en # compile messages

python src/manage.py shell

# management commands (custom)
python src/manage.py get_data_from_bumeran

cd src && gunicorn -k gevent -w 1 src.wsgi

heroku login
- Procfile
- runtime
heroku create
git add .
git commit -m "something"
git push heroku main
